#Â to specify the docker registry when not using Jenkins
dockerRegistry: ""

JXBasicAuth: admin:$apr1$a/HdTrV7$XYCGJWF9PdVwVVTvjMyaU/

extensions:
  enabled: true
teamRoles:
  viewer:
    enabled: true
  team-admin:
    enabled: true


BuildPacks:
  "classic-workloads":
     Label: "Library Workloads: CI+Release but no CD"
     GitUrl: "https://github.com/jenkins-x-buildpacks/jenkins-x-classic.git"
     GitRef: "master"
  "kubernetes-workloads":
     Label: "Kubernetes Workloads: Automated CI+CD with GitOps Promotion"
     GitUrl: "https://github.com/jenkins-x-buildpacks/jenkins-x-kubernetes.git"
     GitRef: "master"

gcpreviews:
  serviceaccount:
    enabled: true
  cronjob:
    enabled: true
    schedule: "0 */3 * * *"
  args:
    - "gc"
    - "previews"
    - "--batch-mode"
  image:
    repository: gcr.io/jenkinsxio/builder-jx
    tag: 2.0.1100-436
  role:
    enabled: true
    rules:
      - apiGroups:
        - jenkins.io
        resources:
        - environments
        - releases
        - facts
        - pipelineactivities
        - commitstatuses
        - schedulers
        - extensions
        - users
        - teams
        - pipelinestructures
        - plugins
        - buildpacks
        - apps
        - sourcerepositories
        - gitservices
        - workflows
        - environmentrolebindings
        - sourcerepositorygroups
        verbs:
        - list
        - get
        - patch
        - update
        - delete
      - apiGroups:
        - ""
        resources:
        - secrets
        - services
        - replicationcontrollers
        - persistentvolumeclaims
        - configmaps
        - serviceaccounts
        verbs:
        - list
        - get
        - watch
      - apiGroups:
        - apps
        resources:
        - daemonsets
        - deployments
        - replicasets
        - statefulsets
        verbs:
        - list
        - get
        - watch
      - apiGroups:
        - autoscaling
        resources:
        - horizontalpodautoscalers
        verbs:
        - list
        - get
        - watch
      - apiGroups:
        - batch
        resources:
        - jobs
        - cronjobs
        verbs:
        - list
        - get
        - watch
      - apiGroups:
        - tekton.dev
        resources:
        - pipelines
        - taskruns
        - tasks
        - clustertasks
        - pipelineresources
        - pipelineruns
        verbs:
        - list
        - get
        - watch
      - apiGroups:
        - rbac.authorization.k8s.io
        resources:
        - roles
        - rolebindings
        verbs:
        - list
        - get
      - apiGroups:
        - vault.banzaicloud.com
        resources:
        - vaults
        verbs:
        - list
        - get
      - apiGroups:
        - extensions
        resources:
        - ingresses
        verbs:
        - list
        - get
  clusterrole:
    enabled: true
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - list
      - delete
    - apiGroups:
      - ""
      resources:
      - pods
      - pods/portforward
      verbs:
      - get
      - create
      - list
      - delete
    - apiGroups:
      - rbac.authorization.k8s.io
      resources:
      - clusterroles
      - clusterrolebindings
      - customresourcedefinitions
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - rbac.authorization.k8s.io
      resources:
      - customresourcedefinitions
      verbs:
      - create
    - apiGroups:
      - tekton.dev
      resources:
      - clustertasks
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - apiextensions.k8s.io
      resources:
      - customresourcedefinitions
      verbs:
      - get
      - list
      - watch
      - create
      - update

gcactivities:
  serviceaccount:
    enabled: true
  cronjob:
    enabled: true
    schedule: "0/30 */3 * * *"
  args:
  - "gc"
  - "activities"
  - "--batch-mode"
  image:
    repository: gcr.io/jenkinsxio/builder-jx
    tag: 2.0.1100-436
  role:
    enabled: true
    rules:
    - apiGroups:
      - jenkins.io
      resources:
      - pipelineactivities
      verbs:
      - list
      - delete
    - apiGroups:
      - jenkins.io
      resources:
      - environments
      verbs:
      - get
      - list
      - patch
      - update
      - watch
    - apiGroups:
      - jenkins.io
      resources:
      - plugins
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - secrets
      - services
      verbs:
      - get
    - apiGroups:
      - apps
      resources:
      - deployments
      verbs:
      - get
    - apiGroups:
      - tekton.dev
      resources:
      - pipelineruns
      verbs:
      - get
      - list
      - watch
      - delete
    - apiGroups:
      - prow.k8s.io
      resources:
      - prowjobs
      verbs:
      - get
      - list
      - watch
      - delete
  clusterrole:
    enabled: true
    rules:
    - apiGroups:
      - apiextensions.k8s.io
      resources:
      - customresourcedefinitions
      verbs:
      - get
      - create
      - patch
      - update
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - delete
      - list
    - apiGroups:
      - apps
      resources:
      - deployments
      verbs:
      - get

gcpods:
  serviceaccount:
    enabled: true
  cronjob:
    enabled: true
    schedule: "0/30 */3 * * *"
  args:
  - "gc"
  - "pods"
  - "--batch-mode"
  image:
    repository: gcr.io/jenkinsxio/builder-jx
    tag: 2.0.1100-436
  role:
    enabled: true
    rules:
    - apiGroups:
      - jenkins.io
      resources:
      - environments
      - plugins
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - pods
      verbs:
      - get
      - delete
      - list

postinstalljob:
  enabled: false
  serviceaccount:
    enabled: true
  job:
    enabled: true
    annotations:
      helm.sh/hook: post-install,post-upgrade
      helm.sh/hook-delete-policy: hook-succeeded
  args:
  - "step"
  - "post"
  - "install"
  - "--batch-mode"
  role:
    enabled: true
    rules:
    - apiGroups:
      - ""
      resources:
      - configmaps
      - secrets
      - services
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - jenkins.io
      resources:
      - environments
      verbs:
      - get
      - list
      - watch
  clusterrole:
    enabled: true
    rules:
    - apiGroups:
      - apiextensions.k8s.io
      resources:
      - customresourcedefinitions
      verbs:
      - get
      - create
      - patch
      - update
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - list
      - watch

controllerworkflow:
  enabled: false
  serviceaccount:
    enabled: true
  deployment:
    enabled: true
  probe:
    path: ""
  restartPolicy: Always
  args:
  - "controller"
  - "workflow"
  image:
    repository: gcr.io/jenkinsxio/builder-jx
    tag: 2.0.1100-436
  clusterrole:
    enabled: true
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - list
    - apiGroups:
      - apiextensions.k8s.io
      resources:
      - customresourcedefinitions
      verbs:
      - get
      - create
      - patch
      - update
      - list
  role:
    enabled: true
    rules:
    - apiGroups:
      - jenkins.io
      resources:
      - pipelineactivities
      verbs:
      - list
      - get
      - watch
      - create
      - patch
      - update
    - apiGroups:
      - jenkins.io
      resources:
      - workflows
      - environments
      verbs:
      - list
      - get
      - watch
    - apiGroups:
      - ""
      resources:
      - services
      - secrets
      verbs:
      - list
      - get

controllerbuild:
  enabled: false
  serviceaccount:
    enabled: true
  deployment:
    enabled: true
  probe:
    path: ""
  restartPolicy: Always
  args:
  - "controller"
  - "build"
  - "--batch-mode"
  - "--git-credentials"
  - "--verbose"
  image:
    repository: gcr.io/jenkinsxio/builder-go
    tag: 2.0.1100-436
  env:
    GIT_AUTHOR_NAME: "jenkins-x-bot"
    GIT_AUTHOR_EMAIL: "jenkins-x@googlegroups.com"
    XDG_CONFIG_HOME: "/home/jenkins"
  clusterrole:
    enabled: true
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - list
    - apiGroups:
      - apiextensions.k8s.io
      resources:
      - customresourcedefinitions
      verbs:
      - get
      - create
      - patch
      - update
      - list
    - apiGroups:
      - tekton.dev
      resources:
      - pipelines
      - pipelinereources
      - pipelineruns
      - tasks
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - apps
      resources:
      - deployments
      verbs:
      - get
      - list
      - watch
  role:
    enabled: true
    rules:
    - apiGroups:
      - jenkins.io
      resources:
      - pipelineactivities
      - pipelinestructures
      - sourcerepositories
      verbs:
      - list
      - get
      - watch
      - create
      - update
      - patch
    - apiGroups:
      - jenkins.io
      resources:
      - environments
      - plugins
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - pods
      - pods/log
      - secrets
      verbs:
      - get
      - list
      - watch

controllercommitstatus:
  enabled: false
  serviceaccount:
    enabled: true
  deployment:
    enabled: true
  probe:
    path: ""
  restartPolicy: Always
  args:
  - "controller"
  - "commitstatus"
  - "--verbose"
  image:
    repository: gcr.io/jenkinsxio/builder-jx
    tag: 2.0.1100-436
  clusterrole:
    enabled: true
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - list
    - apiGroups:
      - apiextensions.k8s.io
      resources:
      - customresourcedefinitions
      verbs:
      - get
      - create
      - patch
      - update
      - list
  role:
    enabled: true
    rules:
    - apiGroups:
      - jenkins.io
      resources:
      - commitstatuses
      verbs:
      - get
      - create
      - update
      - patch
      - watch
      - list
    - apiGroups:
      - jenkins.io
      resources:
      - environments
      - plugins
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - jenkins.io
      resources:
      - pipelineactivities
      verbs:
      - get
      - patch
      - update
    - apiGroups:
      - ""
      resources:
      - pods
      - secrets
      - configmaps
      verbs:
      - watch
      - list
      - get

controllerrole:
  enabled: true
  serviceaccount:
    enabled: true
  deployment:
    enabled: true
  probe:
    path: ""
  restartPolicy: Always
  args:
  - "controller"
  - "role"
  image:
    repository: gcr.io/jenkinsxio/builder-jx
    tag: 2.0.1100-436
  clusterrole:
    enabled: true
    rules:
    - apiGroups:
      - ""
      - extensions
      - apps
      - rbac.authorization.k8s.io
      - batch
      - jenkins.io
      resources:
      - "*"
      - "pods/*"
      verbs:
      - list
      - get
      - watch
      - create
      - update
      - patch
      - delete
    - apiGroups:
      - apiextensions.k8s.io
      resources:
      - customresourcedefinitions
      verbs:
      - get
      - create
      - patch
      - update
      - list
  role:
    enabled: true
    rules:
    - apiGroups:
      - jenkins.io
      resources:
      - environmentrolebindings
      verbs:
      - list
      - get
      - watch
      - create
      - patch
      - update
    - apiGroups:
      - tekton.dev
      resources:
      - '*'
      verbs:
      - list
      - get
      - watch

controllerteam:
  enabled: false
  serviceaccount:
    enabled: true
  deployment:
    enabled: true
  env:
    GIT_AUTHOR_NAME: "jenkins-x-bot"
    GIT_AUTHOR_EMAIL: "jenkins-x@googlegroups.com"
    XDG_CONFIG_HOME: "/home/jenkins"
  probe:
    path: ""
  restartPolicy: Always
  args:
  - "controller"
  - "team"
  image:
    repository: gcr.io/jenkinsxio/builder-jx
    tag: 2.0.1100-436
  clusterrole:
    enabled: true
    rules:
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - watch
      - list
      - create
      - patch
      - update
    - apiGroups:
      - apiextensions.k8s.io
      resources:
      - customresourcedefinitions
      verbs:
      - get
      - create
      - patch
      - update
      - list
    - apiGroups:
      - jenkins.io
      resources:
      - teams
      - users
      verbs:
      - list
      - get
      - watch
      - patch
      - update
    - apiGroups:
      - jenkins.io
      resources:
      - users
      verbs:
      - list
      - get
      - watch
  role:
    enabled: true
    rules:
    - apiGroups:
      - jenkins.io
      resources:
      - teams
      - users
      verbs:
      - list
      - get
      - watch
    - apiGroups:
      - jenkins.io
      resources:
      - environments
      verbs:
      - list
      - get
      - watch
      - create
      - patch
      - update
    - apiGroups:
      - ""
      resources:
      - configmaps
      - persistentvolumeclaims
      - secrets
      - serviceaccounts
      - services
      verbs:
      - list
      - watch
      - get
      - create
      - patch
      - update
      - delete
    - apiGroups:
      - "extensions/v1beta1"
      resources:
      - deployments
      verbs:
      - list
      - watch
      - get
      - create
      - patch
      - update
      - delete
    - apiGroups:
      - "rbac.authorization.k8s.io/v1"
      resources:
      - roles
      - rolebindings
      verbs:
      - list
      - watch
      - get


expose:
  enabled: true
  Annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
    # use value of `path` to use path based ingress
    #config:
    #pathMode: "path"

cleanup:
  enabled: true
  Args:
  - --cleanup
  Annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: hook-succeeded

docker-registry:
  enabled: true
  service:
    annotations:
      fabric8.io/expose: "true"
      fabric8.io/ingress.annotations: "kubernetes.io/ingress.class: nginx\nnginx.ingress.kubernetes.io/proxy-body-size: 2g"
  persistence:
    accessMode: 'ReadWriteOnce'
    enabled: true
    size: 100Gi

kubernetes-dashboard:
  serviceAnnotations:
    fabric8.io/expose: "true"
    fabric8.io/ingress.annotations: "kubernetes.io/ingress.class: nginx\nnginx.ingress.kubernetes.io/auth-type: basic\nnginx.ingress.kubernetes.io/auth-secret: jx-basic-auth"

nexus:
  enabled: true
  service:
    annotations:
      fabric8.io/expose: "true"
      fabric8.io/ingress.annotations: "kubernetes.io/ingress.class: nginx"

nexusServiceLink:
  enabled: false

  # specify the external name here for where the nexus should point
  externalName: ""

chartmuseum:
  enabled: true
  service:
    annotations:
      fabric8.io/expose: "true"
      fabric8.io/ingress.annotations: "kubernetes.io/ingress.class: nginx"
  persistence:
    enabled: true
    AccessMode: ReadWriteOnce
    Size: 8Gi
  env:
    open:
      AUTH_ANONYMOUS_GET: true
      DISABLE_API: false
    secret:
      BASIC_AUTH_USER: admin
      BASIC_AUTH_PASS: admin
  image:
    tag: v0.7.1
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 160m
      memory: 128Mi

chartmuseumServiceLink:
  enabled: false

  # specify the external name here for where the chartmuseum should be
  externalName: ""

jenkins:
  enabled: true
  master:
    componentName: "jenkins-master"
    image: "jenkinsci/jenkins"
    tag: "2.211"
    imagePullPolicy: "IfNotPresent"
    useSecurity: true
    adminUser: admin
    adminPassword: admin
    authorizationStrategy: |-
      <authorizationStrategy class="hudson.security.FullControlOnceLoggedInAuthorizationStrategy">
        <denyAnonymousReadAccess>true</denyAnonymousReadAccess>
      </authorizationStrategy>
    securityRealm: |-
      <securityRealm class="hudson.security.LegacySecurityRealm"/>
    javaOpts: >
      -Dhudson.slaves.NodeProvisioner.initialDelay=0
      -Dhudson.slaves.NodeProvisioner.MARGIN=50
      -Dhudson.slaves.NodeProvisioner.MARGIN0=0.85
      -Djenkins.displayurl.provider=org.jenkinsci.plugins.blueoceandisplayurl.BlueOceanDisplayURLImpl
    servicePort: 8080
    serviceType: ClusterIP
    serviceAnnotations:
      # service.beta.kubernetes.io/aws-load-balancer-backend-protocol: https
      fabric8.io/expose: "true"
      fabric8.io/ingress.annotations: "kubernetes.io/ingress.class: nginx\nnginx.ingress.kubernetes.io/proxy-body-size: 500m"
    slaveListenerPort: 50000
    overwritePlugins: true 
    overwriteConfig: true

  # TODO: Deprecated configuration handled by platform itself, may change them later on thougout?
  Servers:
    BitbucketCloud:
    #- Name: myname
    #  Url: https://something.com/
    #  Credential: some-cred-name

    BitbucketServer:
    #- Name: myname
    #  Url: https://something.com/
    #  Credential: some-cred-name

    GHE:
    #- Name: myname
    #  Url: https://something.com/
    #  Credential: some-cred-name

    Gitea:
    #- Name: myname
    #  Url: https://something.com/
    #  Credential: some-cred-name

    GitLab:
    #- Name: myname
    #  Url: https://something.com/
    #  Credential: some-cred-name

    # global node properties
    Global:
      EnvVars:
        DOCKER_REGISTRY: ""
        TILLER_NAMESPACE: ""

  agent:
    enabled: true
    componentName: "jenkins-agent"
    containerCap: 0

    # Used in jenkins-x-platform templates
    dockerHostPath: "/var/run/docker.sock"
    dockerMountPath: "/var/run/docker.sock"

    # TODO: Deprecated configuration handled by platform itself, may change them later on thougout?
    PodTemplates:
      aws-cdk:
        Name: aws-cdk
        Label: jenkins-aws-cdk
        DevPodPorts: 9229, 3000, 8080, 5005
        volumes:
          - type: Secret
            secretName: jenkins-maven-settings
            mountPath: /root/.m2/
          - type: Secret
            secretName: jenkins-docker-cfg
            mountPath: /home/jenkins/.docker
          - type: Secret
            secretName: jenkins-release-gpg
            mountPath: /home/jenkins/.gnupg
        EnvVars:
          _JAVA_OPTIONS: '-XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx512m'
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine
            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          aws-cdk:
            Image: gcr.io/jenkinsxio/builder-maven-nodejs:2.0.1100-436
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Maven:
        Name: maven
        Label: jenkins-maven
        DevPodPorts: 5005, 8080
        # annotations:
        #   iam.amazonaws.com/role: arn:aws:iam::accountid:role/rolename
        volumes:
        - type: Secret
          secretName: jenkins-maven-settings
          mountPath: /root/.m2/
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        - type: Secret
          secretName: jenkins-release-gpg
          mountPath: /home/jenkins/.gnupg
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          _JAVA_OPTIONS: '-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m'
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
          # lets disable the noisy download artifact logging messages
          MAVEN_OPTS: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine
            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Maven:
            Image: gcr.io/jenkinsxio/builder-maven:2.0.1100-436
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "1"
            LimitMemory: "1024Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Maven-Java11:
        Name: maven-java11
        Label: jenkins-maven-java11
        DevPodPorts: 5005, 8080
        volumes:
        - type: Secret
          secretName: jenkins-maven-settings
          mountPath: /root/.m2/
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        - type: Secret
          secretName: jenkins-release-gpg
          mountPath: /home/jenkins/.gnupg
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          _JAVA_OPTIONS: '-XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m'
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/

          # lets disable the noisy download artifact logging messages
          MAVEN_OPTS: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Maven:
            Image: gcr.io/jenkinsxio/builder-maven-java11:2.0.1100-436
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "1"
            LimitMemory: "1024Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Maven-GraalVM:
        Name: maven-graalvm
        Label: jenkins-maven-graalvm
        DevPodPorts: 5005, 8080
        volumes:
        - type: Secret
          secretName: jenkins-maven-settings
          mountPath: /root/.m2/
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        - type: Secret
          secretName: jenkins-release-gpg
          mountPath: /home/jenkins/.gnupg
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          _JAVA_OPTIONS: '-XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx1800m'
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/

          # lets disable the noisy download artifact logging messages
          MAVEN_OPTS: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Maven:
            Image: gcr.io/jenkinsxio/builder-maven-graalvm:0.1.560
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "2Gi"
            LimitCpu: "1"
            LimitMemory: "3Gi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Gradle:
        Name: gradle
        Label: jenkins-gradle
        DevPodPorts: 5005, 8080
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        - type: Secret
          secretName: jenkins-release-gpg
          mountPath: /home/jenkins/.gnupg
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          _JAVA_OPTIONS: '-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m'
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Gradle:
            Image: gcr.io/jenkinsxio/builder-gradle:2.0.1100-436
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "1"
            LimitMemory: "1024Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Scala:
        Name: scala
        Label: jenkins-scala
        DevPodPorts: 5005, 8080
        volumes:
        - type: Secret
          secretName: jenkins-maven-settings
          mountPath: /root/.m2/
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        - type: Secret
          secretName: jenkins-release-gpg
          mountPath: /home/jenkins/.gnupg
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          _JAVA_OPTIONS: '-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m'
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Scala:
            Image: gcr.io/jenkinsxio/builder-scala:2.0.1100-436
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "1"
            LimitMemory: "1024Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Go:
        Name: go
        Label: jenkins-go
        DevPodPorts: 2345, 8080
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Go:
            Image: gcr.io/jenkinsxio/builder-go:2.0.1100-436
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "600Mi"
            LimitCpu: "1"
            LimitMemory: "1448Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Terraform:
        Name: terraform
        Label: jenkins-terraform
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Terraform:
            Image: gcr.io/jenkinsxio/builder-terraform:2.0.1100-436
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "600Mi"
            LimitCpu: "1"
            LimitMemory: "1448Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Rust:
        Name: rust
        Label: jenkins-rust
        DevPodPorts: 8080
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Rust:
            Image: gcr.io/jenkinsxio/builder-rust:2.0.1100-436
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "1"
            LimitMemory: "1024Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Newman:
        Name: newman
        Label: jenkins-newman
        DevPodPorts: 9229, 3000
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Newman:
            Image: gcr.io/jenkinsxio/builder-newman:2.0.1100-436
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "1"
            LimitMemory: "1024Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Nodejs8x:
        Name: nodejs8x
        # ServiceAccount: fooo
        Label: jenkins-nodejs8x
        DevPodPorts: 9229, 3000, 8080
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Nodejs:
            Image: gcr.io/jenkinsxio/builder-nodejs8x:2.0.1100-436
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Nodejs10x:
        Name: nodejs10x
        # ServiceAccount: fooo
        Label: jenkins-nodejs10x
        DevPodPorts: 9229, 3000, 8080
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Nodejs:
            Image: gcr.io/jenkinsxio/builder-nodejs10x:2.0.1100-436
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Nodejs12x:
        Name: nodejs12x
        # ServiceAccount: fooo
        Label: jenkins-nodejs12x
        DevPodPorts: 9229, 3000, 8080
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine
            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Nodejs:
            Image: gcr.io/jenkinsxio/builder-nodejs12x:2.0.1100-436
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      php5x:
        Name: php5x
        # ServiceAccount: fooo
        Label: jenkins-php5x
        DevPodPorts: 9229, 3000, 8080
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine
            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Nodejs:
            Image: gcr.io/jenkinsxio/builder-php5x:2.0.1100-436
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      php7x:
        Name: php7x
        # ServiceAccount: fooo
        Label: jenkins-php7x
        DevPodPorts: 9229, 3000, 8080
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine
            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Nodejs:
            Image: gcr.io/jenkinsxio/builder-php7x:2.0.1100-436
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Nodejs:
        Name: nodejs
        # ServiceAccount: fooo
        Label: jenkins-nodejs
        DevPodPorts: 9229, 3000, 8080
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Nodejs:
            Image: gcr.io/jenkinsxio/builder-nodejs:2.0.1100-436
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Maven-Nodejs:
        Name: maven-nodejs
        # ServiceAccount: fooo
        Label: jenkins-maven-nodejs
        DevPodPorts: 9229, 3000, 8080, 5005
        volumes:
          - type: Secret
            secretName: jenkins-maven-settings
            mountPath: /root/.m2/
          - type: Secret
            secretName: jenkins-docker-cfg
            mountPath: /home/jenkins/.docker
          - type: Secret
            secretName: jenkins-release-gpg
            mountPath: /home/jenkins/.gnupg
        EnvVars:
          _JAVA_OPTIONS: '-XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms10m -Xmx192m'
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine
            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          MavenNodejs:
            Image: gcr.io/jenkinsxio/builder-maven-nodejs:2.0.1100-436
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      JX-base:
        Name: jx-base
        Label: jenkins-jx-base
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          JX-base:
            Image: gcr.io/jenkinsxio/builder-jx:2.0.1100-436
            Privileged: true
            RequestCpu: "200m"
            RequestMemory: "256Mi"
            LimitCpu: "400m"
            LimitMemory: "512Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Promote:
        Name: promote
        Label: jenkins-promote
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Promote:
            Image: gcr.io/jenkinsxio/builder-jx:2.0.1100-436
            Privileged: true
            RequestCpu: "200m"
            RequestMemory: "100Mi"
            LimitCpu: "400m"
            LimitMemory: "200Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Packer:
        Name: packer
        Label: jenkins-packer
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Packer:
            Image: hashicorp/packer:1.4.1
            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Python2:
        Name: python2
        # ServiceAccount: fooo
        Label: jenkins-python2
        DevPodPorts: 3000, 8000
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Python:
            Image: gcr.io/jenkinsxio/builder-python2:2.0.1100-436
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Python:
        Name: python
        # ServiceAccount: fooo
        Label: jenkins-python
        DevPodPorts: 3000, 8000
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Python:
            Image: gcr.io/jenkinsxio/builder-python:2.0.1100-436
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Python37:
        Name: python37
        # ServiceAccount: fooo
        Label: jenkins-python37
        DevPodPorts: 3000, 8000
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Python:
            Image: gcr.io/jenkinsxio/builder-python37:2.0.1100-436
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Ruby:
        Name: ruby
        # ServiceAccount: fooo
        Label: jenkins-ruby
        DevPodPorts: 1234, 3000
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Ruby:
            Image: gcr.io/jenkinsxio/builder-ruby:2.0.1100-436
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Swift:
        Name: swift
        # ServiceAccount: fooo
        Label: jenkins-swift
        DevPodPorts: 8080
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Swift:
            Image: gcr.io/jenkinsxio/builder-swift:2.0.1100-436
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Dlang:
        Name: dlang
        Label: jenkins-dlang
        DevPodPorts: 8080
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Dlang:
            Image: gcr.io/jenkinsxio/builder-dlang:2.0.1100-436
            Privileged: true
            RequestCpu: "500m"
            RequestMemory: "1024Mi"
            LimitCpu: "1"
            LimitMemory: "2048Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true
      Machine-Learning:
        Name: machine-learning
        # ServiceAccount: fooo
        Label: jenkins-machine-learning
        DevPodPorts: 3000, 8000
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Machine-Learning:
            Image: gcr.io/jenkinsxio/builder-machine-learning:0.1.1027
            Privileged: true
            RequestCpu: "2000m"
            RequestMemory: "4Gi"
            LimitCpu: "8000m"
            LimitMemory: "16Gi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/bash -cl"
            Args: "cat"
            Tty: true
      Machine-Learning-Gpu:
        Name: machine-learning-gpu
        # ServiceAccount: fooo
        Label: jenkins-machine-learning-gpu
        DevPodPorts: 3000, 8000
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        # Node labels and tolerations for pod assignment
        # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
        # ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
        # NodeSelector:
        #   dedicated: jenkins-x-builder
        # Tolerations:
        # - effect: NoSchedule
        #   key: dedicated
        #   operator: Equal
        #   value: jenkins-x-builder
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine

            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          Machine-Learning:
            Image: gcr.io/jenkinsxio/builder-machine-learning-gpu:0.1.1027
            Privileged: true
            RequestCpu: "1000m"
            RequestMemory: "1Gi"
            LimitCpu: "2000m"
            LimitMemory: "2Gi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/bash -cl"
            Args: "cat"
            Tty: true
      DotNet:
        Name: dotnet
        # ServiceAccount: fooo
        Label: jenkins-dotnet
        DevPodPorts: 8080
        volumes:
        - type: Secret
          secretName: jenkins-docker-cfg
          mountPath: /home/jenkins/.docker
        EnvVars:
          JENKINS_URL: http://jenkins:8080
          GIT_COMMITTER_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_EMAIL: jenkins-x@googlegroups.com
          GIT_AUTHOR_NAME: jenkins-x-bot
          GIT_COMMITTER_NAME: jenkins-x-bot
          XDG_CONFIG_HOME: /home/jenkins
          DOCKER_CONFIG: /home/jenkins/.docker/
        ServiceAccount: jenkins
        Containers:
          Jnlp:
            Image: jenkinsci/jnlp-slave:3.26-1-alpine
            RequestCpu: "100m"
            RequestMemory: "128Mi"
            Args: '${computer.jnlpmac} ${computer.name}'
          DotNet:
            Image: gcr.io/jenkinsxio/builder-dotnet:2.0.1100-436
            Privileged: true
            RequestCpu: "400m"
            RequestMemory: "512Mi"
            LimitCpu: "2"
            LimitMemory: "2048Mi"
            # You may want to change this to true while testing a new image
            # AlwaysPullImage: true
            Command: "/bin/sh -c"
            Args: "cat"
            Tty: true

  persistence:
    enabled: true
    accessMode: "ReadWriteOnce"
    size: "30Gi"

  networkPolicy:
    enabled: false
    apiVersion: extensions/v1beta1

  rbac:
    create: true

  serviceAccount:
    create: true
    name: jenkins
    annotations: {}

PipelineSecrets:
  DockerConfig: "{}"
  GithubToken:
  NPMToken:
  GPG:
    pubring: ""
    secjenkins: ""
    secring: ""
    trustdb: ""
  SSHConfig: |-
    Host github.com
        User git
        IdentityFile /root/.ssh-git/ssh-key
        StrictHostKeyChecking no
  MavenSettingsSecurityXML:
  MavenSettingsXML: |-
    <settings>
        <!-- sets the local maven repository outside of the ~/.m2 folder for easier mounting of secrets and repo -->
        <localRepository>${user.home}/.mvnrepository</localRepository>
        <!-- lets disable the download progress indicator that fills up logs -->
        <interactiveMode>false</interactiveMode>
        <mirrors>
            <mirror>
            <id>nexus</id>
            <mirrorOf>external:*</mirrorOf>
            <url>http://nexus:8081/repository/maven-group/</url>
            </mirror>
        </mirrors>
        <servers>
            <server>
            <id>nexus</id>
            <username>admin</username>
            <password>admin123</password>
        </server>
        <server>
            <id>oss-sonatype-staging</id>
            <username></username>
            <password></password>
            </server>
        </servers>
        <profiles>
            <profile>
                <id>nexus</id>
                <properties>
                    <altDeploymentRepository>nexus::default::http://nexus/repository/maven-snapshots/</altDeploymentRepository>
                    <altReleaseDeploymentRepository>nexus::default::http://nexus/repository/maven-releases/</altReleaseDeploymentRepository>
                    <altSnapshotDeploymentRepository>nexus::default::http://nexus/repository/maven-snapshots/</altSnapshotDeploymentRepository>
                </properties>
            </profile>
            <profile>
                <id>release</id>
                <properties>
                    <gpg.executable>gpg</gpg.executable>
                    <gpg.passphrase>mysecretpassphrase</gpg.passphrase>
                </properties>
            </profile>
        </profiles>
        <activeProfiles>
            <!--make the profile active all the time -->
            <activeProfile>nexus</activeProfile>
        </activeProfiles>
    </settings>

grafana:
  server:
    adminUser: "admin"
    adminPassword: "admin"

    ## Pass the plugins you want installed as a comma seperated list.
    ## This will pass each plugin name to `grafana-cli plugins install ${plugin}`.
    ## Ref: https://github.com/grafana/grafana-docker#installing-plugins-for-grafana-3
    ##
    # installPlugins:

    # Set datasource in beginning
    setDatasource:
      ## If true, an initial Grafana Datasource will be set
      enabled: true

      # How long should it take to commit failure
      # Default: 300
      #
      activeDeadlineSeconds: 1000

      # Curl Docker image
      # Default: appropriate/curl:latest
      #
      image: appropriate/curl:latest
      restartPolicy: OnFailure

      # This assembles how curl post into Grafana
      # Ref1: http://docs.grafana.org/reference/http_api/#create-data-source
      # Ref2: https://github.com/grafana/grafana/issues/1789
      #
      datasource:
        # The datasource name.
        # Default: default
        name: prometheus

        # Type of datasource
        # Default: prometheus
        #
        type: prometheus

        # The url of the datasource. To set correctly you need to know
        # the right datasource name and its port ahead. Check kubernetes
        # dashboard or describe the service should fulfill the requirements.
        # Synatx like `http://<release name>-<server name>:<port number>
        # Default: "http://limping-tiger-server"
        #
        url: "http://jenkins-x-prometheus-server:80"

        # The name of the database at the datasource.
        # Required parameter when used with elasticsearch, which refers to the index_name
        # Default: <empty>
        # database:

        # Additional JSON data to be passed to the configuration of the datasource.
        # The JSON data is passed to curl, therefore it needs proper quoting and
        # escaping and needs to be on a single line. For example:
        #  '\"esVersion\": 2, \"interval\": \"Daily\", \"timeField\": \"@timestamp\"'
        # jsonData: null

        # Specify if Grafana has to go thru proxy to reach datasource
        # Default: proxy
        #
        access: proxy

        # Specify should Grafana use this datasource as default
        # Default: true
        #
        isDefault: true

    service:
      annotations:
        fabric8.io/expose: "true"
        fabric8.io/ingress.annotations: "kubernetes.io/ingress.class: nginx"




